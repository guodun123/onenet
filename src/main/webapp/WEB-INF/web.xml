<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">

  <!-- 让web.xml文件读取spring配置文件，-->
  <listener id="description">
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

 <!-- <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>-->
  <!-- 引入springmvc功能 mvc是代替Servlet的 现为统一管理Servlet的类是org.springframework.web.servlet.DispatcherServlet,它管理所有.action请求
提醒，默认springmvc文件的位置在web-inf裡面，其次，命名為xxx-Servlet.xml,如果不是，就加上<init-param>标签-->
  <servlet>
    <servlet-name>Dispatcher</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
   <!-- <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:applicationContext.xml</param-value>
    </init-param>-->
  </servlet>

  <servlet-mapping>
    <servlet-name>Dispatcher</servlet-name>
    <url-pattern>*.action </url-pattern>
  </servlet-mapping>
  <!-- 设置首页 -->
  <welcome-file-list>
    <welcome-file>login.jsp</welcome-file>
  </welcome-file-list>

</web-app>